#include <iostream>
#include <cmath>
using namespace std;

class Complex
{
private:
    double real, imaginary;
public:
    Complex(){  // default constructor
        real = 0;
        imaginary = 0;
    }

    Complex(double r, double i){ // parameter constructor
        real = r;
        imaginary = i;
    }

    double modulus() const {
        return sqrt(real * real + imaginary * imaginary);
    }

    bool operator >(const Complex& other) const {   // first > operator
        return modulus() > other.modulus();
    }

    Complex& operator =(const Complex& other){
        if (this != &other){
            real = other.real;
            imaginary = other.imaginary;
        }
        return *this;
    }

    void display() const {
        cout<< real << " + " << imaginary << "i"<<endl;
    }
};

int main()
{
    int n;
    cout<<"enter how many complex number you want: "<<endl;
    cin>>n;

    Complex arr[n];
    for(int i = 0; i < n; i++){
        double r, im;
        cout<<"enter complex number "<< i + 1<<" :";
        cin>>r >> im;
        arr[i] = Complex(r, im);
    }

    cout<<"you've entered: "<< endl;
    for(int i = 0; i < n; i++){
        arr[i].display();
    }
    return 0;
}
